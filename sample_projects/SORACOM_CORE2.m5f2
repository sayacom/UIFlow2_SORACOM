{
  "version": "V2.0",
  "versionNumber": "V2.1.9",
  "type": "core2",
  "components": [
    {
      "name": "screen",
      "type": "screen",
      "layer": 0,
      "screenId": "builtin",
      "screenName": "",
      "id": "__core2_screen",
      "createTime": 1733930509852,
      "x": 0,
      "y": 0,
      "width": 320,
      "height": 240,
      "backgroundColor": "#222222",
      "size": 0,
      "isSelected": true
    }
  ],
  "resources": [
    {
      "software": [
        "http",
        "udp",
        "tcp"
      ]
    },
    {
      "hardware": [
        "hardware_button",
        "hardware_pin_button",
        "uart",
        "imu",
        "speaker",
        "touch",
        "mic",
        "i2c"
      ]
    },
    {
      "unit": [
        "unit_co2",
        "unit_catmgnss"
      ]
    },
    {
      "custom": [
        "custom_soracom"
      ]
    }
  ],
  "units": [
    {
      "type": "unit_co2",
      "name": "co2_0",
      "portList": [
        "A",
        "PAHUB",
        "Custom"
      ],
      "portType": "A",
      "userPort": [
        22,
        21
      ],
      "id": "pfRlYo5DxUPpHxDX",
      "createTime": 1734437033072,
      "bus": "i2c0",
      "pahubPortList": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "pahubPort": 0
    },
    {
      "type": "unit_catmgnss",
      "name": "catmgnss_0",
      "portList": [
        "A",
        "B",
        "C",
        "Custom"
      ],
      "portType": "C",
      "userPort": [
        22,
        21
      ],
      "id": "jkB@zFvB^YFxTNQt",
      "createTime": 1734437033074,
      "initBlockId": "N{y7WDd_Av3Be2.,C`Su"
    }
  ],
  "hats": [],
  "bases": [],
  "i2cs": [
    {
      "id": "i2c0",
      "portType": "A",
      "userPort": [
        22,
        21
      ],
      "freq": "100000",
      "blockId": "C!M1f0kdu$/Q+u@!Ty9B"
    }
  ],
  "blockly": "<variables><variable id=\"3tg:uIq8=UJ9gsJm3OIx\">sensor_values</variable><variable id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</variable><variable id=\"e9:yKZSmldI7BLS3Qa49\">response</variable></variables><block type=\"basic_on_setup\" id=\"setup_block\" deletable=\"false\" x=\"30\" y=\"-269\"><mutation isBegin=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_begin\" id=\"c2@Y1!31?m{_.$v}fhQb\"><next><block type=\"text_print\" id=\"pZj;i*NDbbkicO{{96[(\"><value name=\"TEXT\"><shadow type=\"text\" id=\"Q4puID.k}y3/qiA77R0~\"><field name=\"TEXT\">Initializing interfaces...</field></shadow></value><next><block type=\"i2c_init\" id=\"C!M1f0kdu$/Q+u@!Ty9B\"><field name=\"NAME\">0</field><field name=\"FREQ\">100000</field><value name=\"SCL\"><shadow type=\"math_number\" id=\"(Yh5@Ybh@j#jw[-RI_JB\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">33</field></shadow></value><value name=\"SDA\"><shadow type=\"math_number\" id=\"L?g3j::.LOL=nMnGuPuq\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">32</field></shadow></value><next><block type=\"unit_co2_init\" id=\"0ZHH(?c+W6j?ZUhU[o2P\"><field name=\"NAME\">co2_0</field><next><block type=\"custom_soracom_init\" id=\"X%^*3pk+^7F0svgN4E#u\"><field name=\"NAME\">soracom_0</field><field name=\"auth_type\">'pap'</field><value name=\"username\"><shadow type=\"text\" id=\"d[MRDmpap@xTABC{Ymi*\"><field name=\"TEXT\">sora</field></shadow></value><value name=\"password\"><shadow type=\"text\" id=\"^o#c^EmS8Q+GeV|11g5$\"><field name=\"TEXT\">sora</field></shadow></value><next><block type=\"unit_catmgnss_init\" id=\"N{y7WDd_Av3Be2.,C`Su\"><field name=\"NAME\">catmgnss_0</field><value name=\"UART\"><shadow type=\"unit_catmgnss_id_option\" id=\"pl9H.hiTaTq@9U~d=9*%\"><field name=\"VALUE\">2</field></shadow></value><next><block type=\"text_print\" id=\"86t{QrX!ixL`]N7CqeC_\"><value name=\"TEXT\"><shadow type=\"text\" id=\"1SRC]eATIv;l]YPjFC^_\"><field name=\"TEXT\">Initializing modem...</field></shadow></value><next><block type=\"controls_whileUntil\" id=\"KczDod#gnxf1HohA:zjL\"><field name=\"MODE\">WHILE</field><value name=\"BOOL\"><block type=\"logic_negate\" id=\"[@MOfuRXUo(StJ?%UGAC\"><value name=\"BOOL\"><block type=\"unit_catmgnss_check_modem_is_ready\" id=\"YNES,}Pp2e!4,~~?eaOy\"><field name=\"NAME\">catmgnss_0</field></block></value></block></value><statement name=\"DO\"><block type=\"time_sleep_second\" id=\"U?EaTFU.Db-:njUvOzmz\"><value name=\"SECOND\"><shadow type=\"math_number\" id=\"ck6+KD4kuO.0)k$Ney`Z\"><mutation max=\"Infinity\" min=\"0\" precision=\"0\"></mutation><field name=\"NUM\">1</field></shadow></value><next><block type=\"text_print\" id=\"{XZn@:.]$l`[E8eQ$d~R\"><value name=\"TEXT\"><shadow type=\"text\" id=\"q[zb9C^s?mLaYVmFdi|v\"><field name=\"TEXT\">.</field></shadow></value></block></next></block></statement><next><block type=\"unit_catmgnss_set_gprs_network_state\" id=\"[}u)VRDR,14pD/54Y@$`\"><field name=\"NAME\">catmgnss_0</field><field name=\"STATE\">1</field><next><block type=\"text_print\" id=\"-zxfZJW)(6W:Yj;E#BjR\"><value name=\"TEXT\"><shadow type=\"text\" id=\"s_W5.qvVOYxyEeJcK|km\"><field name=\"TEXT\">Connecting to soracom...</field></shadow></value><next><block type=\"custom_soracom_set_interface\" id=\":g_;+b57RnzAZV_:.,sc\"><field name=\"NAME\">soracom_0</field><field name=\"objs\">globals()</field><value name=\"obj_name\"><shadow type=\"text\" id=\"~`.g9hQbcb=rO~-oVn|9\"><field name=\"TEXT\">catmgnss_0</field></shadow></value><next><block type=\"custom_soracom_set_debug_mode\" id=\"W8B5`o`T2eziGh(E,zuT\"><field name=\"NAME\">soracom_0</field><field name=\"debug_mode\">True</field><next><block type=\"custom_soracom_dialup\" id=\"Q*mi/zI8GxupIr.H6juD\"><field name=\"NAME\">soracom_0</field><value name=\"phone_number\"><shadow type=\"text\" id=\"VCygS~{#yEtK6p|X3-Sr\"><field name=\"TEXT\">*99#</field></shadow></value><value name=\"timeout\"><shadow type=\"math_number\" id=\"E3S-b`RgKD7T!bpq0j)z\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">2000</field></shadow></value><next><block type=\"text_print\" id=\"$h1};X)RZVR`JxYcglHW\"><value name=\"TEXT\"><shadow type=\"text\" id=\"wjw7r7dE?{:%U7^?QwQW\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"custom_soracom_connect_ppp\" id=\"4P?Y1Hw-7D.o%IFsoRg+\"><field name=\"NAME\">soracom_0</field></block></value><next><block type=\"text_print\" id=\"@9}(KxOM9)PqWOPm*)7!\"><value name=\"TEXT\"><shadow type=\"text\" id=\"7mfeP5vuB7[jgy-+MH4T\"><field name=\"TEXT\">Getting Userdata...</field></shadow></value><next><block type=\"variables_set\" id=\"2az}n`fbCxHn+oh3KBb!\"><field name=\"VAR\" id=\"e9:yKZSmldI7BLS3Qa49\">response</field><value name=\"VALUE\"><block type=\"custom_soracom_get_userdata\" id=\":4!~H/!5@/ZORM[Mr-{z\"><field name=\"NAME\">soracom_0</field></block></value><next><block type=\"text_print\" id=\"aEqbH;q1b8FxLheCPN0L\"><value name=\"TEXT\"><shadow type=\"text\" id=\"DC4#TR:t@T6W1C2[`/sF\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"custom_soracom_get_latest_http_response_status_code\" id=\"|5p3,)}(wb,t|rNaIDVT\"><field name=\"NAME\">soracom_0</field></block></value><next><block type=\"text_print\" id=\"vh(3K;I),K@)+5*ND@p6\"><value name=\"TEXT\"><shadow type=\"text\" id=\"{09nwcRgh/q3T[,06e[M\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"text_convert_str\" id=\"_[_.~%%~uX86{#Lk1bER\"><value name=\"VALUE\"><block type=\"custom_soracom_get_latest_http_response_text\" id=\"g|O]T~j^Hn/CLhSItB6H\"><field name=\"NAME\">soracom_0</field></block></value></block></value><next><block type=\"unit_co2_set_stop_periodic_measurement\" id=\"YqD;!2TwAt4tT_Fx`HnD\"><field name=\"NAME\">co2_0</field><next><block type=\"unit_co2_set_start_periodic_measurement\" id=\"*X)Kj]bH,Ep+ZH4o-.:_\"><field name=\"NAME\">co2_0</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"button_callback\" id=\"(|!!k!}z$2]O1|[EP7Yu\" x=\"910\" y=\"-290\"><field name=\"NAME\">BtnA</field><field name=\"TYPE\">WAS_CLICKED</field><statement name=\"FUNC\"><block type=\"text_print\" id=\"oG?IXc6CO6FUekcK/pd|\"><value name=\"TEXT\"><shadow type=\"text\" id=\"mCzDJewE#+_mR6Q0w%6o\"><field name=\"TEXT\">Sending to Unified Endpoint...</field></shadow></value><next><block type=\"variables_set\" id=\"})-gHNf?FrlvH`gvISLt\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field><value name=\"VALUE\"><block type=\"logic_null\" id=\"kXA!-zqrxiuPJ.:YxhR/\"></block></value><next><block type=\"variables_set\" id=\"jmw`QcY]EM2q{vp)rt)5\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field><value name=\"VALUE\"><block type=\"procedures_callreturn\" id=\"~CJwlk!9Ahee$|m@I)k9\"><mutation name=\"get_sensor_values\"></mutation></block></value><next><block type=\"map_add_key_value\" id=\"@zb=Wd~~PMSwtbm+CT`S\"><value name=\"MAP\"><block type=\"variables_get\" id=\"E+4$:{^x|2y~-+E-MG9#\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field></block></value><value name=\"KEY\"><block type=\"text\" id=\"JC{m6Mr0EtCA=w)@K%;r\"><field name=\"TEXT\">protocol</field></block></value><value name=\"VALUE\"><block type=\"text\" id=\"_h!4GaGX_yo]fe@4r0Pf\"><field name=\"TEXT\">http_unified</field></block></value><next><block type=\"variables_set\" id=\"uY*9!/}~EEsUAj.RU?D]\"><field name=\"VAR\" id=\"e9:yKZSmldI7BLS3Qa49\">response</field><value name=\"VALUE\"><block type=\"custom_soracom_send_data_by_http\" id=\"j(Jc7miz4/_RvWiSuNYH\"><field name=\"NAME\">soracom_0</field><field name=\"dest\">'unified_endpoint'</field><value name=\"headers\"><shadow type=\"text\" id=\"H$vUzt.87V9b#0$pW65X\"><field name=\"TEXT\"></field></shadow></value><value name=\"body\"><shadow type=\"text\" id=\"DMcF1dF]:eKPBLL5ypn}\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"xxLla^56m{Tq-9073RhG\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field></block></value></block></value><next><block type=\"text_print\" id=\"/=TRTYA;qV`F(lGhr?W?\"><value name=\"TEXT\"><shadow type=\"text\" id=\"Dk_0Wza,FI{5kt:unc.Y\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"text_convert_str\" id=\"wKbj!Bpg5AGV^gKs.a[~\"><value name=\"VALUE\"><block type=\"custom_soracom_get_latest_http_response_reason\" id=\"ZaH}x0c7RY/`xsD37M@{\"><field name=\"NAME\">soracom_0</field></block></value></block></value></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"basic_on_loop\" id=\"loop_block\" deletable=\"false\" x=\"530\" y=\"-270\"><mutation isUpdate=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_update\" id=\"system_m5_update\"></block></statement></block><block type=\"button_callback\" id=\"Ih$brfW@:Ga07y[G7SPF\" x=\"550\" y=\"-150\"><field name=\"NAME\">BtnB</field><field name=\"TYPE\">WAS_CLICKED</field><statement name=\"FUNC\"><block type=\"text_print\" id=\"j/4h`a^b-V=3O#G5ZH(R\"><value name=\"TEXT\"><shadow type=\"text\" id=\"(J2xoNK}7hF_gydFg`?w\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"custom_soracom_disconnect_ppp\" id=\"i5jvmPCsmyYeHIG%.PbG\"><field name=\"NAME\">soracom_0</field></block></value></block></statement></block><block type=\"button_callback\" id=\"%,D2J1Qv/s^90g1xYZK,\" x=\"910\" y=\"-30\"><field name=\"NAME\">BtnA</field><field name=\"TYPE\">WAS_HOLD</field><statement name=\"FUNC\"><block type=\"text_print\" id=\"%h?sH+5rvtF+y=Ak|R)0\"><value name=\"TEXT\"><shadow type=\"text\" id=\"nAdJ15VO}K]_7?a;;=N9\"><field name=\"TEXT\">Sending to Beam...</field></shadow></value><next><block type=\"variables_set\" id=\"NPiu;^~{ZR:=4yFezi-j\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field><value name=\"VALUE\"><block type=\"procedures_callreturn\" id=\"h=E|7j,h~$-j]e,eMt5n\"><mutation name=\"get_sensor_values\"></mutation></block></value><next><block type=\"map_add_key_value\" id=\"qzJ8D`}dy0Sjm`vd@.J-\"><value name=\"MAP\"><block type=\"variables_get\" id=\"/^aV0sze/vmu2fX,9d7M\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field></block></value><value name=\"KEY\"><block type=\"text\" id=\"=o{I0mv;vGv$KnI3c/#l\"><field name=\"TEXT\">protocol</field></block></value><value name=\"VALUE\"><block type=\"text\" id=\"V2OySQs%:nr}=B]ryX8W\"><field name=\"TEXT\">http_beam</field></block></value><next><block type=\"variables_set\" id=\"5[bJ;}R.Bt_)38_Q=6?R\"><field name=\"VAR\" id=\"e9:yKZSmldI7BLS3Qa49\">response</field><value name=\"VALUE\"><block type=\"custom_soracom_send_data_to_beam\" id=\"k@`j.0l2NC6+rMl$V(tW\"><field name=\"NAME\">soracom_0</field><field name=\"endpoint_type\">'endpoint_http'</field><value name=\"method\"><shadow type=\"text\" id=\"|-2HV]bzbLk}yd5ev_G%\"><field name=\"TEXT\">POST</field></shadow></value><value name=\"path\"><shadow type=\"text\" id=\"j1x9bf5TBc`,1f^m5eN7\"><field name=\"TEXT\"></field></shadow></value><value name=\"headers\"><shadow type=\"text\" id=\"v@QYyg82FZD)MA^VN3=P\"><field name=\"TEXT\"></field></shadow></value><value name=\"body\"><shadow type=\"text\" id=\"j-tM}s2q~OqKPci;#iIJ\"><field name=\"TEXT\"></field></shadow><block type=\"variables_get\" id=\"Ks]FVuNRvY,:!zz2U|Ik\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field></block></value></block></value><next><block type=\"text_print\" id=\"eHQKEyE_+l2OwR=RZiI?\"><value name=\"TEXT\"><shadow type=\"text\" id=\"Dk_0Wza,FI{5kt:unc.Y\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"custom_soracom_get_latest_http_response_status_code\" id=\"1SDrl*KWE:ac#c{9SiV;\"><field name=\"NAME\">soracom_0</field></block></value><next><block type=\"text_print\" id=\"WEh)kgxnbcU5)b#`}M@m\"><value name=\"TEXT\"><shadow type=\"text\" id=\"Dk_0Wza,FI{5kt:unc.Y\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"json_dumsp_to_json\" id=\"Zp=el9v|;J|~`Vl1Z?Kz\"><value name=\"VALUE\"><block type=\"custom_soracom_get_latest_http_response_json\" id=\"M3_=;V4oDAW_Q+OIgR]O\"><field name=\"NAME\">soracom_0</field></block></value></block></value></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"button_callback\" id=\"j`#s$0l;J|Mu-eD;:#1v\" x=\"930\" y=\"290\"><field name=\"NAME\">BtnC</field><field name=\"TYPE\">WAS_CLICKED</field><statement name=\"FUNC\"><block type=\"text_print\" id=\"x._0!JyXc:K@o$mn:NL{\"><value name=\"TEXT\"><shadow type=\"text\" id=\"W:8Up[UTYPQplAv[C6@7\"><field name=\"TEXT\">Sending TCP mode...</field></shadow></value><next><block type=\"variables_set\" id=\"%(#~7TEtm8Asr@@){%vV\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field><value name=\"VALUE\"><block type=\"logic_null\" id=\"%$j[2vaAS;E@vlZFXLwe\"></block></value><next><block type=\"variables_set\" id=\"5l4Cqc+NGwXX;1np2lhr\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field><value name=\"VALUE\"><block type=\"procedures_callreturn\" id=\"ibPYv}egnT2sjWWH24ai\"><mutation name=\"get_sensor_values\"></mutation></block></value><next><block type=\"map_add_key_value\" id=\"sJJi[0E,Wd]N~biak_eS\"><value name=\"MAP\"><block type=\"variables_get\" id=\"FngBd_S6eHe7OyUb(e)`\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field></block></value><value name=\"KEY\"><block type=\"text\" id=\"qcl/sPk|U]ZM@:#cadD~\"><field name=\"TEXT\">protocol</field></block></value><value name=\"VALUE\"><block type=\"text\" id=\"qBHj+fB_*4SoSm[]#MjT\"><field name=\"TEXT\">tcp</field></block></value><next><block type=\"tcp_client_start\" id=\"Y:k7`VLxJ#n%1$N!T2k_\"><value name=\"IP\"><shadow type=\"text\" id=\"F+.E37|z@S~}=$!ymp0;\"><field name=\"TEXT\">uni.soracom.io</field></shadow></value><value name=\"PORT\"><shadow type=\"math_number\" id=\"5Hum.m7KIrdUZj2y^Yi5\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">23080</field></shadow></value><next><block type=\"tcp_client_send\" id=\"SL1*$;=4k@vP/VxO!OVS\"><value name=\"DATA\"><shadow type=\"text\" id=\":T`tOX@giq6ah#eT:SW0\"><field name=\"TEXT\"></field></shadow><block type=\"json_dumsp_to_json\" id=\"OC9vcHKd)fx?+?6%8S]I\"><value name=\"VALUE\"><block type=\"variables_get\" id=\"FE{T.P8#3!8-O~Y2-_31\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field></block></value></block></value><next><block type=\"text_print\" id=\"*(0hu~bgpHF%krRf81I,\"><value name=\"TEXT\"><shadow type=\"text\" id=\"KNMlRG38`~JH]}{`%#JM\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"tcp_client_readline\" id=\"uj/!t9ham3c:+|}$48+h\"></block></value><next><block type=\"tcp_client_close\" id=\"ztQQX1Spe%CSr^3+fJLY\"></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"button_callback\" id=\"gO5d3DHFe(x?X$,CQe,m\" x=\"1570\" y=\"350\"><field name=\"NAME\">BtnC</field><field name=\"TYPE\">WAS_HOLD</field><statement name=\"FUNC\"><block type=\"text_print\" id=\"Qm=2f?ic2[yR3}kmlBPE\"><value name=\"TEXT\"><shadow type=\"text\" id=\"xULHt?i(`8T~zFsTCYuQ\"><field name=\"TEXT\">Sending UDP mode...</field></shadow></value><next><block type=\"variables_set\" id=\"dSD+Q#z*7NZU7,^H=h=g\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field><value name=\"VALUE\"><block type=\"logic_null\" id=\"LnVu!DG`lph@M]_G^bn+\"></block></value><next><block type=\"variables_set\" id=\"1dgS^jQZ!.G!lYYH+r__\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field><value name=\"VALUE\"><block type=\"procedures_callreturn\" id=\"UHWjQi(Z^#VV~=zdPDno\"><mutation name=\"get_sensor_values\"></mutation></block></value><next><block type=\"map_add_key_value\" id=\"U%Yb#~/{+}J;{$Ph;%vM\"><value name=\"MAP\"><block type=\"variables_get\" id=\"ruy#7V@QFpxujcZM:9p;\"><field name=\"VAR\" id=\"YOf=YkQxH)c{TjNOR!Zq\">payload</field></block></value><value name=\"KEY\"><block type=\"text\" id=\":lC.d=(CmOnr![4zX=fx\"><field name=\"TEXT\">protocol</field></block></value><value name=\"VALUE\"><block type=\"text\" id=\"4g56`Uy#3B/e5Alaj:KK\"><field name=\"TEXT\">udp</field></block></value><next><block type=\"udp_client_start\" id=\"}v,?lH]xM5|SB6VGl)P#\"><value name=\"IP\"><shadow type=\"text\" id=\")r-s`ard@f,4xO0~4*d4\"><field name=\"TEXT\">uni.soracom.io</field></shadow></value><value name=\"PORT\"><shadow type=\"math_number\" id=\"NDxh.i-J?L+GFh+GAf%k\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">23080</field></shadow></value><next><block type=\"udp_client_send\" id=\"]_L33F#0:,f4@Oa}~l`0\"><value name=\"DATA\"><shadow type=\"text\" id=\";s@jmQ5CMKCWlOE6l_Z8\"><field name=\"TEXT\"></field></shadow><block type=\"json_dumsp_to_json\" id=\"x6I$=QgC.Oy|vpRfsh!8\"><value name=\"VALUE\"><block type=\"variables_get\" id=\":YUm=*FVa)!1[M2[=|H3\"><field name=\"VAR\" id=\"3tg:uIq8=UJ9gsJm3OIx\">sensor_values</field></block></value></block></value><next><block type=\"text_print\" id=\"IX~awBGHq8g(Q%M0x,o$\"><value name=\"TEXT\"><shadow type=\"text\" id=\"#^glS+YhwR2_{8+;AGyh\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"udp_client_recv\" id=\"e|MR/RewBaFGB+BUM23p\"><value name=\"NUMBER\"><shadow type=\"math_number\" id=\"nZ.]@=WsZQE.i_W07{7p\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">1024</field></shadow></value></block></value><next><block type=\"udp_client_close\" id=\"M!KHeEcc-;@Xe[DoH,Dv\"></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"procedures_defreturn\" id=\"l$,pOxY@t/p}DvFiiwo*\" x=\"30\" y=\"690\"><field name=\"NAME\">get_sensor_values</field><comment pinned=\"false\" h=\"80\" w=\"160\">Describe this function...</comment><statement name=\"STACK\"><block type=\"controls_ifelse\" id=\",aX{bm~0Y$%Ml/Wbg:32\"><value name=\"IF0\"><block type=\"unit_co2_is_data_ready\" id=\"NV0x97evuDIOw5qvTP9~\"><field name=\"NAME\">co2_0</field></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"x|ymv%.hg?@jK50zrgCM\"><field name=\"VAR\" id=\"3tg:uIq8=UJ9gsJm3OIx\">sensor_values</field><value name=\"VALUE\"><block type=\"map_on_loop\" id=\"`50`_$~Y.dAOcVVeKDVT\"><statement name=\"LOOP\"><block type=\"create_map_key\" id=\"L-?DpmD;CGX{}(-0OjEB\"><value name=\"key\"><shadow type=\"text\" id=\"yVVWL{);QGAPj|.Azt|)\"><field name=\"TEXT\">temp</field></shadow></value><value name=\"value\"><shadow type=\"text\" id=\"4$EMmitMo#3_:gAn2LK8\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"unit_co2_get_temperature\" id=\"TJ8%M-!!mO}6;G.9ba`;\"><field name=\"NAME\">co2_0</field></block></value><next><block type=\"create_map_key\" id=\"*b/a@F;67gt{StT4PGmp\"><value name=\"key\"><shadow type=\"text\" id=\"$:PuLc^8.,M[]H$XRfkm\"><field name=\"TEXT\">humid</field></shadow></value><value name=\"value\"><shadow type=\"text\" id=\"doE]=Rt=:5H@W!v[}|+m\"><field name=\"TEXT\"></field></shadow><block type=\"unit_co2_get_humidity\" id=\"nu4~LHe0_2OO4Ho:~hSP\"><field name=\"NAME\">co2_0</field></block></value><next><block type=\"create_map_key\" id=\",vIV42{{O61;q1xKNMDw\"><value name=\"key\"><shadow type=\"text\" id=\"x8z52)+tTt0/[@SzCP`w\"><field name=\"TEXT\">co2</field></shadow></value><value name=\"value\"><shadow type=\"text\" id=\"CG$NuoLw/V4(:WxRQ7OG\"><field name=\"TEXT\"></field></shadow><block type=\"unit_co2_get_value\" id=\",*ZX+SZI-*s:,=$-V=o{\"><field name=\"NAME\">co2_0</field></block></value><next><block type=\"create_map_key\" id=\"VN]^W{0bn9c}H0wxy.:e\"><value name=\"key\"><shadow type=\"text\" id=\"y)/sE7*jmpbMFuzA]L,|\"><field name=\"TEXT\">protocol</field></shadow></value><value name=\"value\"><shadow type=\"text\" id=\"cs]~Ka8@tLJscHJkcc^w\"><field name=\"TEXT\">http</field></shadow></value></block></next></block></next></block></next></block></statement></block></value><next><block type=\"text_print\" id=\"wgTaW#!-ZFQ,1t~roc3N\"><value name=\"TEXT\"><shadow type=\"text\" id=\"gqGPfsURyEhly7u(CS|6\"><field name=\"TEXT\">hello M5</field></shadow><block type=\"variables_get\" id=\"`]sv#=_sI5G`OC+Xx5Kg\"><field name=\"VAR\" id=\"3tg:uIq8=UJ9gsJm3OIx\">sensor_values</field></block></value></block></next></block></statement><statement name=\"ELSE\"><block type=\"text_print\" id=\"YENvFU=~RG3Lj15D|DR^\"><value name=\"TEXT\"><shadow type=\"text\" id=\"Ty,d%3GZKlc|-faUML:_\"><field name=\"TEXT\">No ready to measure.</field></shadow></value><next><block type=\"variables_set\" id=\"S.XbCMDdU}2N8!52M[*?\"><field name=\"VAR\" id=\"3tg:uIq8=UJ9gsJm3OIx\">sensor_values</field><value name=\"VALUE\"><block type=\"map_on_loop\" id=\"on+HmuX|!N@hhRko]=w:\"></block></value></block></next></block></statement></block></statement><value name=\"RETURN\"><block type=\"variables_get\" id=\"W,OD{v{@}.mX(DkfwK.:\"><field name=\"VAR\" id=\"3tg:uIq8=UJ9gsJm3OIx\">sensor_values</field></block></value></block>",
  "screen": [
    {
      "simulationName": "Built-in",
      "type": "builtin",
      "width": 320,
      "height": 240,
      "scale": 0.78,
      "screenName": "",
      "blockId": "",
      "screenColorType": 0,
      "id": "builtin",
      "createTime": 1733930509851
    }
  ],
  "logicWhenNum": 0,
  "customList": [
    {
      "id": "custom_soracom",
      "name": "Soracom",
      "color": "#34cdd7",
      "blockly": "const CUSTOM_SORACOM_LANGUAGES = {\n  \"CUSTOM_SORACOM_INIT\": {\n    \"en\": \"Initialize %1 AuthType %2 Username %3 Password %4\"\n  },\n  \"CUSTOM_SORACOM_SET_INTERFACE\": {\n    \"en\": \"%1 Set UART/Modem Interface from %2 name %3\"\n  },\n  \"CUSTOM_SORACOM_SET_DEBUG_MODE\": {\n    \"en\": \"%1 Set debug mode %2\"\n  },\n  \"CUSTOM_SORACOM_EXECUTE_AT_COMMAND\": {\n    \"en\": \"%1 Execute AT Command %2 Expect response %3 Timeout %4\"\n  },\n  \"CUSTOM_SORACOM_DIALUP\": {\n    \"en\": \"%1 Dialup to %2 Timeout %3\"\n  },\n  \"CUSTOM_SORACOM_CONNECT_PPP\": {\n    \"en\": \"%1 Connect PPP\"\n  },\n  \"CUSTOM_SORACOM_PPP_ISCONNECTED\": {\n    \"en\": \"%1 PPP isConnected\"\n  },\n  \"CUSTOM_SORACOM_PPP_IFCONFIG\": {\n    \"en\": \"%1 PPP ifconfig\"\n  },\n  \"CUSTOM_SORACOM_DISCONNECT_PPP\": {\n    \"en\": \"%1 Disconnect PPP\"\n  },\n  \"CUSTOM_SORACOM_SEND_DATA_BY_HTTP\": {\n    \"en\": \"%1 Send data as JSON by HTTP %2 Header %3 Body %4\"\n  },\n  \"CUSTOM_SORACOM_SEND_DATA_TO_BEAM\": {\n    \"en\": \"%1 Send data as JSON by HTTP to SORACOM Beam, Endpoint %2 Method %3 Path %4 Headers %5 Body %6\"\n  },\n  \"CUSTOM_SORACOM_GET_SIM_TAG\": {\n    \"en\": \"%1 Get SIM Tag Name %2\"\n  },\n  \"CUSTOM_SORACOM_SET_SIM_TAG\": {\n    \"en\": \"%1 Set SIM Tag Name %2 Value %3\"\n  },\n  \"CUSTOM_SORACOM_DELETE_SIM_TAG\": {\n    \"en\": \"%1 Delete SIM Tag Name %2\"\n  },\n  \"CUSTOM_SORACOM_GET_USERDATA\": {\n    \"en\": \"%1 Get Userdata\"\n  },\n  \"CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_HEADERS\": {\n    \"en\": \" %1 Get latest HTTP response headers\"\n  },\n  \"CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_STATUS_CODE\": {\n    \"en\": \"%1 Get latest HTTP response status code\"\n  },\n  \"CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_TEXT\": {\n    \"en\": \" %1 Get latest HTTP response text\"\n  },\n  \"CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_JSON\": {\n    \"en\": \" %1 Get latest HTTP response JSON\"\n  },\n  \"CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_CONTENT\": {\n    \"en\": \" %1 Get latest HTTP response content\"\n  },\n  \"CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_REASON\": {\n    \"en\": \" %1 Get latest HTTP response reason\"\n  }\n};\n\nconst initType = 'custom_soracom_init';\nBlockly.BlockRegExpList['custom_soracom'] = {\n  regexp: new RegExp(/^custom_soracom_/),\n  code: \"from Soracom import Soracom\",\n  initBlockType: initType,\n  categoryId: 'custom_soracom',\n}\nBlockly.utils.registerLanguages(CUSTOM_SORACOM_LANGUAGES)\n\nBlockly.Msg.CUSTOM_SORACOM_HUE = '#34cdd7'\nBlockly.Msg.CUSTOM_SORACOM = 'Soracom'\n\nBlockly.utils.getcustom_soracomOptions = function() {\n  let options = [];\n  let list = Blockly.utils.getCustomNameList(initType);\n  for (let i = 0; i < list.length; i++) {\n    let value = list[i];\n    options.push([String(value), String(value)]);\n  }\n  if (options.length === 0) return [\n    ['soracom_0', 'soracom_0']\n  ];\n  return options;\n}\n\n\nBlockly.Blocks[\"custom_soracom_init\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_INIT,\n      'args0': [\n        // { 'type': 'field_dropdown', 'name': 'NAME', 'options': Blockly.utils.getcustom_soracomOptions },\n        {\n          'type': 'field_input',\n          'name': 'NAME',\n          'text': 'soracom_0'\n        },\n        {\n          \"type\": \"field_dropdown\",\n          \"name\": \"auth_type\",\n          \"options\": [\n            [\"PAP\", \"'pap'\"],\n            [\"CHAP\", \"'chap'\"],\n            [\"none\", \"'none'\"]\n          ],\n        }, {\n          'type': 'input_value',\n          'name': 'username'\n        }, {\n          'type': 'input_value',\n          'name': 'password'\n        },\n      ],\n      'previousStatement': null,\n      'nextStatement': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n      \"tool\": []\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_init\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var auth_type = block.getFieldValue('auth_type');\n  var username = Blockly.Python.valueToCode(block, 'username', Blockly.Python.ORDER_FUNCTION_CALL);\n  var password = Blockly.Python.valueToCode(block, 'password', Blockly.Python.ORDER_FUNCTION_CALL);\n  return `${varname} = Soracom(${auth_type}, ${username}, ${password})\\n`\n}\n\nBlockly.Blocks[\"custom_soracom_set_interface\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_SET_INTERFACE,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          \"type\": \"field_dropdown\",\n          \"name\": \"objs\",\n          \"options\": [\n            [\"globals\", \"globals()\"]\n          ],\n        }, {\n          'type': 'input_value',\n          'name': 'obj_name'\n        },\n      ],\n      'previousStatement': null,\n      'nextStatement': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_set_interface\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var objs = block.getFieldValue('objs');\n  var obj_name = Blockly.Python.valueToCode(block, 'obj_name', Blockly.Python.ORDER_FUNCTION_CALL);\n  return `${varname}.set_interface(${objs}, ${obj_name})\\n`\n}\n\nBlockly.Blocks[\"custom_soracom_set_debug_mode\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_SET_DEBUG_MODE,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          \"type\": \"field_switch\",\n          \"name\": \"debug_mode\",\n          \"options\": [\n            ['True', 'True'],\n            ['False', 'False']\n          ],\n        },\n      ],\n      'previousStatement': null,\n      'nextStatement': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_set_debug_mode\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var debug_mode = block.getFieldValue('debug_mode');\n  return `${varname}.set_debug_mode(${debug_mode})\\n`\n}\n\nBlockly.Blocks[\"custom_soracom_execute_at_command\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_EXECUTE_AT_COMMAND,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'command'\n        }, {\n          'type': 'input_value',\n          'name': 'expect_response'\n        }, {\n          'type': 'input_value',\n          'name': 'timeout'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_execute_at_command\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var command = Blockly.Python.valueToCode(block, 'command', Blockly.Python.ORDER_FUNCTION_CALL);\n  var expect_response = Blockly.Python.valueToCode(block, 'expect_response', Blockly.Python.ORDER_FUNCTION_CALL);\n  var timeout = Blockly.Python.valueToCode(block, 'timeout', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.execute_at_command(${command}, ${expect_response}, ${timeout})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_dialup\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_DIALUP,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'phone_number'\n        }, {\n          'type': 'input_value',\n          'name': 'timeout'\n        },\n      ],\n      'previousStatement': null,\n      'nextStatement': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_dialup\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var phone_number = Blockly.Python.valueToCode(block, 'phone_number', Blockly.Python.ORDER_FUNCTION_CALL);\n  var timeout = Blockly.Python.valueToCode(block, 'timeout', Blockly.Python.ORDER_FUNCTION_CALL);\n  return `${varname}.dialup(${phone_number}, ${timeout})\\n`\n}\n\nBlockly.Blocks[\"custom_soracom_connect_ppp\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_CONNECT_PPP,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_connect_ppp\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.connect_ppp()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_ppp_isconnected\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_PPP_ISCONNECTED,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_ppp_isconnected\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.ppp_isconnected()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_ppp_ifconfig\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_PPP_IFCONFIG,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_ppp_ifconfig\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.ppp_ifconfig()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_disconnect_ppp\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_DISCONNECT_PPP,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_disconnect_ppp\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.disconnect_ppp()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_send_data_by_http\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_SEND_DATA_BY_HTTP,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          \"type\": \"field_dropdown\",\n          \"name\": \"dest\",\n          \"options\": [\n            [\"Unified Endpoint\", \"'unified_endpoint'\"],\n            [\"Harvest\", \"'harvest'\"],\n            [\"Funnel\", \"'funnel'\"],\n            [\"Funk\", \"'funk'\"]\n          ],\n        }, {\n          'type': 'input_value',\n          'name': 'headers'\n        }, {\n          'type': 'input_value',\n          'name': 'body'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_send_data_by_http\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var dest = block.getFieldValue('dest');\n  var headers = Blockly.Python.valueToCode(block, 'headers', Blockly.Python.ORDER_FUNCTION_CALL);\n  var body = Blockly.Python.valueToCode(block, 'body', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.send_data_by_http(${dest}, ${headers}, ${body})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_send_data_to_beam\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_SEND_DATA_TO_BEAM,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          \"type\": \"field_dropdown\",\n          \"name\": \"endpoint_type\",\n          \"options\": [\n            [\"HTTP\", \"'endpoint_http'\"],\n            [\"Website\", \"'endpoint_website'\"]\n          ],\n        }, {\n          'type': 'input_value',\n          'name': 'method'\n        }, {\n          'type': 'input_value',\n          'name': 'path'\n        }, {\n          'type': 'input_value',\n          'name': 'headers'\n        }, {\n          'type': 'input_value',\n          'name': 'body'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_send_data_to_beam\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var endpoint_type = block.getFieldValue('endpoint_type');\n  var method = Blockly.Python.valueToCode(block, 'method', Blockly.Python.ORDER_FUNCTION_CALL);\n  var path = Blockly.Python.valueToCode(block, 'path', Blockly.Python.ORDER_FUNCTION_CALL);\n  var headers = Blockly.Python.valueToCode(block, 'headers', Blockly.Python.ORDER_FUNCTION_CALL);\n  var body = Blockly.Python.valueToCode(block, 'body', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.send_data_to_beam(${endpoint_type}, ${method}, ${path}, ${headers}, ${body})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_get_sim_tag\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_GET_SIM_TAG,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'tag_name'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_get_sim_tag\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var tag_name = Blockly.Python.valueToCode(block, 'tag_name', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.get_sim_tag(${tag_name})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_set_sim_tag\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_SET_SIM_TAG,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'tag_name'\n        }, {\n          'type': 'input_value',\n          'name': 'tag_value'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_set_sim_tag\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var tag_name = Blockly.Python.valueToCode(block, 'tag_name', Blockly.Python.ORDER_FUNCTION_CALL);\n  var tag_value = Blockly.Python.valueToCode(block, 'tag_value', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.set_sim_tag(${tag_name}, ${tag_value})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_delete_sim_tag\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_DELETE_SIM_TAG,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'tag_name'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_delete_sim_tag\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var tag_name = Blockly.Python.valueToCode(block, 'tag_name', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.delete_sim_tag(${tag_name})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_get_userdata\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_GET_USERDATA,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_get_userdata\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.get_userdata()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_get_latest_http_response_headers\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_HEADERS,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_get_latest_http_response_headers\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.get_latest_http_response_headers()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_get_latest_http_response_status_code\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_STATUS_CODE,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_get_latest_http_response_status_code\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.get_latest_http_response_status_code()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_get_latest_http_response_text\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_TEXT,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_get_latest_http_response_text\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.get_latest_http_response_text()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_get_latest_http_response_json\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_JSON,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_get_latest_http_response_json\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.get_latest_http_response_json()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_get_latest_http_response_content\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_CONTENT,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_get_latest_http_response_content\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.get_latest_http_response_content()`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_soracom_get_latest_http_response_reason\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_SORACOM_GET_LATEST_HTTP_RESPONSE_REASON,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_soracomOptions\n        },\n\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#34cdd7\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_soracom_get_latest_http_response_reason\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return [`${varname}.get_latest_http_response_reason()`, Blockly.Python.ORDER_NONE]\n}",
      "toolbox": "\n<category name=\"Soracom\" colour=\"#34cdd7\" hidden=\"true\" toolboxitemid=\"custom_soracom\">\n<title text=\"Soracom\" docsLink=\"https://github.com/sayacom\"></title>\n<block type=\"custom_soracom_init\">\n  <value name=\"username\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\">sora</field>\n    </shadow>\n  </value>\n  <value name=\"password\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\">sora</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_set_interface\">\n  <value name=\"obj_name\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\">catmgnss_0</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_set_debug_mode\">\n  <field name=\"debug_mode\">False</field>\n</block><block type=\"custom_soracom_execute_at_command\">\n  <value name=\"command\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"expect_response\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"timeout\">\n    <shadow type=\"math_number\">\n      <field name=\"NUM\">1000</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_dialup\">\n  <value name=\"phone_number\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\">*99#</field>\n    </shadow>\n  </value>\n  <value name=\"timeout\">\n    <shadow type=\"math_number\">\n      <field name=\"NUM\">2000</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_connect_ppp\"/><block type=\"custom_soracom_ppp_isconnected\"/><block type=\"custom_soracom_ppp_ifconfig\"/><block type=\"custom_soracom_disconnect_ppp\"/><block type=\"custom_soracom_send_data_by_http\">\n  <value name=\"headers\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"body\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_send_data_to_beam\">\n  <value name=\"method\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"path\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"headers\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"body\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_get_sim_tag\">\n  <value name=\"tag_name\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\">TAG_NAME</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_set_sim_tag\">\n  <value name=\"tag_name\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\">TAG_NAME</field>\n    </shadow>\n  </value>\n  <value name=\"tag_value\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\">TAG_VALUE</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_delete_sim_tag\">\n  <value name=\"tag_name\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\">TAG_NAME</field>\n    </shadow>\n  </value>\n</block><block type=\"custom_soracom_get_userdata\"/><block type=\"custom_soracom_get_latest_http_response_headers\"/><block type=\"custom_soracom_get_latest_http_response_status_code\"/><block type=\"custom_soracom_get_latest_http_response_text\"/><block type=\"custom_soracom_get_latest_http_response_json\"/><block type=\"custom_soracom_get_latest_http_response_content\"/><block type=\"custom_soracom_get_latest_http_response_reason\"/>\n</category>\n",
      "pyCode": "\n\"\"\"\nfile     Soracom\ntime     2024-12-17\nauthor   sayacom\nemail   \nlicense  MIT License\n\"\"\"\n\nimport json\nfrom hardware import *\nimport machine\nimport time\nimport network\nimport requests\nfrom driver.simcom.common import AT_CMD\nfrom driver.simcom.common import Modem\n\nclass Soracom:\n    \"\"\"\n    note:\n        en: Soracom\n    details:\n        color: '#34cdd7'\n        link: https://github.com/sayacom\n        image: ''\n        category: Custom\n    example: ''\n    \"\"\"\n\n\n\n\n    def __init__(self, auth_type, username: str = 'sora', password: str = 'sora'):\n        \"\"\"\n        label:\n            en: Initialize %1 AuthType %2 Username %3 Password %4\n        params:\n            auth_type:\n                name: auth_type\n                field: dropdown\n                options:\n                    PAP: '''pap'''\n                    CHAP: '''chap'''\n                    none: '''none'''\n            username:\n                name: username\n                type: str\n                default: sora\n            password:\n                name: password\n                type: str\n                default: sora\n        \"\"\"\n        self.ppp_username = username\n        self.ppp_password = password\n\n        self.ppp_authmode = 0\n        if auth_type == \"pap\":\n            self.ppp_authmode = 1\n        elif auth_type == \"chap\":\n            self.ppp_authmode = 2\n\n        self.__modem = None\n        self.__uart = None\n        self.__ppp = None\n        self.latest_response = None\n\n    def set_interface(self, objs, obj_name: str = 'catmgnss_0'):\n        \"\"\"\n        label:\n            en: '%1 Set UART/Modem Interface from %2 name %3'\n        params:\n            objs:\n                name: objs\n                field: dropdown\n                options:\n                    globals: globals()\n            obj_name:\n                name: obj_name\n                type: str\n                default: catmgnss_0\n        \"\"\"\n        interface_definition = objs.get(obj_name, None)\n        if interface_definition is None:\n            print(\"Could not find interface.\")\n            return\n\n        if isinstance(interface_definition, machine.UART):\n            self.__uart = interface_definition\n            self.__modem = Modem(self.__uart)\n            print(\"Use UART\")\n        elif isinstance(interface_definition, Modem):\n            self.__modem = interface_definition\n            self.__uart = interface_definition.uart\n            print(\"Use Modem\")\n\n    def set_debug_mode(self, debug_mode: bool = False):\n        \"\"\"\n        label:\n            en: '%1 Set debug mode %2'\n        params:\n            debug_mode:\n                name: debug_mode\n                type: bool\n                default: 'False'\n                field: switch\n        \"\"\"\n        if self.__modem:\n            self.__modem.modem_debug = debug_mode\n\n    def execute_at_command(self, command: str, expect_response: str, timeout: int = 1000):\n        \"\"\"\n        label:\n            en: '%1 Execute AT Command %2 Expect response %3 Timeout %4'\n        params:\n            command:\n                name: command\n                type: str\n            expect_response:\n                name: expect_response\n                type: str\n            timeout:\n                name: timeout\n                type: int\n                default: '1000'\n                field: number\n                max: '100'\n                min: '0'\n        \"\"\"\n        if self.__modem is None:\n            return None\n\n        output, error = self.__modem.execute_at_command(\n            AT_CMD(f\"{command}\", expect_response, timeout)\n        )\n\n        if not error:\n            return output\n\n        return None\n\n    def dialup(self, phone_number: str = '*99#', timeout: int = 2000):\n        \"\"\"\n        label:\n            en: '%1 Dialup to %2 Timeout %3'\n        params:\n            phone_number:\n                name: phone_number\n                type: str\n                default: '*99#'\n            timeout:\n                name: timeout\n                type: int\n                default: '2000'\n                field: number\n                max: '100'\n                min: '0'\n        \"\"\"\n        self.__modem.execute_at_command(AT_CMD(f\"ATD{phone_number}\", \"CONNECT\", timeout))\n\n    def connect_ppp(self):\n        \"\"\"\n        label:\n            en: '%1 Connect PPP'\n        \"\"\"\n        if self.__modem is None:\n            return False\n\n        self.__ppp = network.PPP(self.__uart)\n        self.__ppp.active(True)\n\n        for _ in range(5):\n            self.__ppp.connect(authmode=self.ppp_authmode, username=self.ppp_username, password=self.ppp_password)\n            time.sleep_ms(1000)\n            if self.__ppp.isconnected():\n                break\n\n        return self.__ppp.isconnected()\n\n    def ppp_isconnected(self):\n        \"\"\"\n        label:\n            en: '%1 PPP isConnected'\n        \"\"\"\n        if self.__modem is None or self.__ppp is None:\n            return False\n\n        return self.__ppp.isconnected()\n\n    def ppp_ifconfig(self):\n        \"\"\"\n        label:\n            en: '%1 PPP ifconfig'\n        \"\"\"\n        if self.__modem is None or self.__ppp is None:\n            return None\n\n        return self.__ppp.ifconfig()\n\n    def disconnect_ppp(self):\n        \"\"\"\n        label:\n            en: '%1 Disconnect PPP'\n        \"\"\"\n        if self.__modem is None or self.__ppp is None:\n            return False\n\n        return self.__ppp.active(False)\n\n    def send_data_by_http(self, dest, headers, body):\n        \"\"\"\n        label:\n            en: '%1 Send data as JSON by HTTP %2 Header %3 Body %4'\n        params:\n            dest:\n                name: dest\n                field: dropdown\n                options:\n                    Unified Endpoint: '''unified_endpoint'''\n                    Harvest: '''harvest'''\n                    Funnel: '''funnel'''\n                    Funk: '''funk'''\n            headers:\n                name: headers\n            body:\n                name: body\n        \"\"\"\n        host = None\n        if dest == \"unified_endpoint\":\n            host = \"http://uni.soracom.io\"\n        elif dest == \"harvest\":\n            host = \"http://harvest.soracom.io\"\n        elif dest == \"funnel\":\n            host = \"http://funnel.soracom.io\"\n        elif dest == \"funk\":\n            host = \"http://funk.soracom.io\"\n\n        if headers == \"\":\n            headers = None\n        if body == \"\":\n            body = None\n\n        self.latest_response = requests.post(url=host, headers=headers, json=body)\n        return self.latest_response\n\n    def send_data_to_beam(self, endpoint_type, method, path, headers, body):\n        \"\"\"\n        label:\n            en: '%1 Send data as JSON by HTTP to SORACOM Beam, Endpoint %2 Method %3 Path\n                %4 Headers %5 Body %6'\n        params:\n            endpoint_type:\n                name: endpoint_type\n                field: dropdown\n                options:\n                    HTTP: '''endpoint_http'''\n                    Website: '''endpoint_website'''\n            method:\n                name: method\n            path:\n                name: path\n            headers:\n                name: headers\n            body:\n                name: body\n        \"\"\"\n        if not path:\n            path = '/'\n        if not headers:\n            headers = None\n        if not body:\n            body = None\n        \n        url = None\n        if endpoint_type == \"endpoint_http\":\n            url = f\"http://beam.soracom.io:8888{path.lstrip('/')}\"\n        elif endpoint_type == \"endpoint_website\":\n            url = f\"http://beam.soracom.io:18080{path.lstrip('/')}\"\n\n        self.latest_response = requests.request(method=method, url=url, headers=headers, json=body)\n        return self.latest_response\n\n    def get_sim_tag(self, tag_name: str = 'TAG_NAME'):\n        \"\"\"\n        label:\n            en: '%1 Get SIM Tag Name %2'\n        params:\n            tag_name:\n                name: tag_name\n                type: str\n                default: TAG_NAME\n        \"\"\"\n        self.latest_response = requests.get(url=f\"http://metadata.soracom.io/v1/subscriber.tags.{tag_name}\")\n        return self.latest_response\n\n    def set_sim_tag(self, tag_name: str = 'TAG_NAME', tag_value: str = 'TAG_VALUE'):\n        \"\"\"\n        label:\n            en: '%1 Set SIM Tag Name %2 Value %3'\n        params:\n            tag_name:\n                name: tag_name\n                type: str\n                default: TAG_NAME\n            tag_value:\n                name: tag_value\n                type: str\n                default: TAG_VALUE\n        \"\"\"\n        tag_object = [{\"tagName\": tag_name, \"tagValue\": tag_value}]\n        self.latest_response = requests.put(url=f\"http://metadata.soracom.io/v1/subscriber/tags\", json=tag_object)\n        return self.latest_response\n\n    def delete_sim_tag(self, tag_name: str = 'TAG_NAME'):\n        \"\"\"\n        label:\n            en: '%1 Delete SIM Tag Name %2'\n        params:\n            tag_name:\n                name: tag_name\n                type: str\n                default: TAG_NAME\n        \"\"\"\n        self.latest_response = requests.delete(url=f\"http://metadata.soracom.io/v1/subscriber/tags/{tag_name}\")\n        return self.latest_response\n\n    def get_userdata(self):\n        \"\"\"\n        label:\n            en: '%1 Get Userdata'\n        \"\"\"\n        self.latest_response = requests.get(url=f\"http://metadata.soracom.io/v1/userdata\")\n        return self.latest_response\n\n    def get_latest_http_response_headers(self):\n        \"\"\"\n        label:\n            en: ' %1 Get latest HTTP response headers'\n        \"\"\"\n        if self.latest_response is None:\n            return None\n\n        return self.latest_response.headers\n\n    def get_latest_http_response_status_code(self):\n        \"\"\"\n        label:\n            en: '%1 Get latest HTTP response status code'\n        \"\"\"\n        if self.latest_response is None:\n            return None\n\n        return self.latest_response.status_code\n\n    def get_latest_http_response_text(self):\n        \"\"\"\n        label:\n            en: ' %1 Get latest HTTP response text'\n        \"\"\"\n        if self.latest_response is None:\n            return None\n\n        return self.latest_response.text\n\n    def get_latest_http_response_json(self):\n        \"\"\"\n        label:\n            en: ' %1 Get latest HTTP response JSON'\n        \"\"\"\n        if self.latest_response is None:\n            return None\n\n        return self.latest_response.json()\n\n    def get_latest_http_response_content(self):\n        \"\"\"\n        label:\n            en: ' %1 Get latest HTTP response content'\n        \"\"\"\n        if self.latest_response is None:\n            return None\n\n        return self.latest_response.content\n\n    def get_latest_http_response_reason(self):\n        \"\"\"\n        label:\n            en: ' %1 Get latest HTTP response reason'\n        \"\"\"\n        if self.latest_response is None:\n            return None\n\n        return self.latest_response.reason\n\n\n"
    }
  ]
}